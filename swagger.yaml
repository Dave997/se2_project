swagger: '2.0'

info:
  version: '1.0'
  title: "se2_project_nathaniellee"
  description: Didactical project for software engineering 2 unitn
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE

host: se2-project-nathaniellee.herokuapp.com

basePath: /
schemes:
- https

consumes:
- application/json
produces:
- application/json

paths:
  /students:
    get:
      summary: Returns the list of all students
      # description: Description
      produces:
        - application/json
      responses:
        200:
          description: OK
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
    post:
      summary: "Add a new pet to the store"
      operationId: "addStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Student"
        description: "The student to create"
        required:
        - stdentName:
            properties:
              stdentName:
                type: string
        - stdentEmail:
            properties:
              stdentName:
                type: string
        schema:
          $ref: "#/definitions/Student"
      responses:
        200:
          description: "OK"
        201:
          description: Created
        405:
          description: "Invalid input"
    put:
      summary: "Update an existing student"
      description: ""
      operationId: "updateStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        200:
          description: OK
        201:
          description: Created
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        404:
          description: Pet not found
        405:
          description: Validation exception
        409:
          description: Conflict

  /students/{studentId}:
    get:
      summary: Returns the student with the specified id
      parameters:
        - in: path
          name: studentId
          required: true
          type: integer
          minimum: 1
          description: The id of the student
      responses:
        200:
          description: A Student object.
          schema:
            $ref: '#/definitions/Student'
        400:
          description: The specified user ID is invalid.
        404:
          description: A user with the specified ID was not found.
        500:
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      summary: "Deletes a Student"
      description: ""
      operationId: "deleteStudent"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "studentId"
        in: "path"
        description: "Student id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
        400:
          description: "Invalid ID supplied"
        401:
          description: Unauthorized
        404:
          description: "Student not found"
        406:
          description: Not Acceptable #Da valutare in caso si passi l'id

  /professor:
    get:
      summary: Returns the list of all professors
      # description: Description
      produces:
        - application/json
      responses:
        200:
          description: OK
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
  /professor/{profId}:
    get:
      summary: Returns the student with the specified id
      parameters:
        - in: path
          name: profId
          required: true
          type: integer
          minimum: 1
          description: The id of the professor
      responses:
        200:
          description: A Professor object.
          schema:
            $ref: '#/definitions/Professor'
        400:
          description: The specified user ID is invalid.
        404:
          description: A user with the specified ID was not found.
        500:
          description: Internal server error
        default:
          description: Unexpected error

  /courses:
    get:
      summary: Returns the list of all courses
      # description: Description
      produces:
        - application/json
      responses:
        200:
          description: OK
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
  /courses/{courseId}:
    get:
      summary: Returns the course with the specified id
      parameters:
        - in: path
          name: courseId
          required: true
          type: integer
          minimum: 1
          description: The id of the course
      responses:
        200:
          description: A Student object.
          schema:
            $ref: '#/definitions/Course'
        400:
          description: The specified course ID is invalid.
        404:
          description: A course with the specified ID was not found.
        500:
          description: Internal server error
        default:
          description: Unexpected error


definitions:
  Student:
    properties:
      id:
        type: integer
        example: 123456
      name:
        type: string
        example: Polpetta
    required:
      - id

  Professor:
    properties:
      id:
        type: integer
        example: 123456
      name:
        type: string
        example: Polpetta
    required:
      - id

  Course:
    properties:
      id:
        type: integer
        example: 123456
      name:
        type: string
        example: Polpetta
    required:
      - id
  
# Da aggiungere:
# - task
# - exercise
# - contributors
# - group